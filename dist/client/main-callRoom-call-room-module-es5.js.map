{"version":3,"sources":["src/app/main/callRoom/call-room.component.html","src/app/main/callRoom/call-room.component.css","src/app/main/callRoom/call-room.component.ts","src/app/main/callRoom/call-room.module.ts","src/app/main/callRoom/call-room.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"containerSelfVideo\\\" [style.background-color]=\\\"isCameraOpen ? 'rgb(28, 30, 33)' : 'transparent'\\\">\\r\\n  <video id=\\\"userVideo\\\" class=\\\"selfVideoPlayer\\\" [style.display]=\\\"isCameraOpen ? 'inline' : 'none'\\\" height=\\\"200px\\\"\\r\\n    width=\\\"200px\\\">\\r\\n    <source>\\r\\n  </video>\\r\\n</div>\\r\\n<div class=\\\"containerUserVideo\\\">\\r\\n  <video class=\\\"userVideoPlayer\\\" id=\\\"otherUserVideo\\\" [style.display]=\\\"isOtherUserCameraOpen ? 'inline' : 'none'\\\">\\r\\n    <source>\\r\\n  </video>\\r\\n</div>\\r\\n<div *ngIf=\\\"userCallDes\\\" class=\\\"main-div\\\">\\r\\n  <div class=\\\"row\\\" style=\\\"height: 100%;\\\">\\r\\n    <div class=\\\"col-12\\\" style=\\\"height: 100%; padding-top: 200px;\\\">\\r\\n      <div *ngIf=\\\"!isOtherUserCameraOpen\\\" class=\\\"user-info-container\\\">\\r\\n        <img [src]=\\\"userCallDes.profileImg\\\" class=\\\"user-image\\\" />\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!isOtherUserCameraOpen\\\">\\r\\n        <div style=\\\" margin-top: 30px;\\\" class=\\\"user-info-container\\\">\\r\\n          <p style=\\\"font-weight: 800;font-size: 18px;\\\" [style.color]=\\\"isCameraOpen? 'white': 'black'\\\">\\r\\n            {{userCallDes?.surname}} {{userCallDes?.name}}.</p>\\r\\n        </div>\\r\\n        <div class=\\\"user-info-container\\\">\\r\\n          <p style=\\\"color: #999999;\\\">{{callState}}</p>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"main-buttons-container\\\" [style.margin-top]=\\\"isOtherUserCameraOpen ? '190px':'0'\\\">\\r\\n        <div *ngIf=\\\"callStatus\\\" class=\\\"buttons-bar-container\\\">\\r\\n          <div class=\\\"button-control-container\\\" [style.border-color]=\\\"!isCameraOpen? '#999999' : '#0084ff'\\\"\\r\\n            [style.background-color]=\\\"isCameraOpen? '#0084ff' : 'white' \\\">\\r\\n            <i [ngClass]=\\\"isCameraOpen? 'fas fa-video media-control-icon media-active' : 'fas fa-video-slash media-control-icon'\\\"\\r\\n              (click)=\\\"onOpenAndCloseCamera(!isCameraOpen)\\\"></i>\\r\\n          </div>\\r\\n          <div class=\\\"button-control-container\\\" style=\\\"margin: 30px 30px;\\\"\\r\\n            [style.border-color]=\\\"!isMicroOpen? '#999999' : '#0084ff'\\\"\\r\\n            [style.background-color]=\\\"isMicroOpen? '#0084ff' : 'white'\\\">\\r\\n            <i [ngClass]=\\\"isMicroOpen? 'fas fa-microphone media-control-icon media-active' : 'fas fa-microphone-slash media-control-icon'\\\"\\r\\n              (click)=\\\"onOpenAndCloseMicro(!isMicroOpen)\\\"></i>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"button-control-container\\\" style=\\\"background-color: #f03d25;\\\">\\r\\n            <i class=\\\" fas fa-phone endcall-icon\\\" (click)=\\\"endCall()\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!callStatus\\\" class=\\\"call-ended-container\\\">\\r\\n          <div class=\\\"call-ended-buttons-container\\\">\\r\\n            <div class=\\\"recompose-button-container\\\">\\r\\n              <i class=\\\" fas fa-phone recompose-icon\\\" (click)=\\\"endCall()\\\"></i>\\r\\n            </div>\\r\\n            <p style=\\\"max-width:80px;\\\">Redial the number</p>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"call-ended-buttons-container\\\">\\r\\n            <div class=\\\"close-button-container\\\">\\r\\n              <i class=\\\"fas fa-times close-icon\\\" (click)=\\\"closeCallWindow()\\\"></i>\\r\\n            </div>\\r\\n            <p>Close</p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \".main-div {\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  width: 100vw;\\r\\n  height: 100vh;\\r\\n}\\r\\n\\r\\n.containerUserVideo {\\r\\n  width: 35vw;\\r\\n  height: 100%;\\r\\n  position: absolute;\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n  left: calc(50vw - 17.5vw);\\r\\n  top: 0px;\\r\\n  z-index: -900;\\r\\n  overflow: hidden;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n\\r\\n}\\r\\n\\r\\n.user-image {\\r\\n  height: 100px;\\r\\n  width: 100px;\\r\\n  border-radius: 50%;\\r\\n}\\r\\n\\r\\n.main-buttons-container {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: flex-end;\\r\\n  height: 60%;\\r\\n}\\r\\n\\r\\n.call-ended-buttons-container {\\r\\n  margin-left: 40px;\\r\\n  margin-right: 40px;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.recompose-button-container {\\r\\n  width: 44px;\\r\\n  border-radius: 50%;\\r\\n  padding: 11px;\\r\\n  border: 1px solid #0084ff;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.close-button-container {\\r\\n  width: 44px;\\r\\n  border-radius: 50%;\\r\\n  padding: 11px 14px 11px 14px;\\r\\n  border: 1px solid #f03d25;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.call-ended-container {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  width: 100%;\\r\\n  height: 200px;\\r\\n}\\r\\n\\r\\n.button-control-container {\\r\\n  border-radius: 50%;\\r\\n  height: 50px;\\r\\n  border: 1px solid transparent;\\r\\n  width: 50px;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n}\\r\\n\\r\\n.buttons-bar-container {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n/* rgb(28, 30, 33); */\\r\\n\\r\\n.userVideoPlayer {\\r\\n  min-height: 100%;\\r\\n  margin-right: 5px;\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.containerSelfVideo {\\r\\n  width: 100vw;\\r\\n  height: 100vh;\\r\\n  position: absolute;\\r\\n  display: flex;\\r\\n  justify-content: flex-end;\\r\\n  align-items: flex-end;\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  z-index: -1000;\\r\\n\\r\\n}\\r\\n\\r\\n.close-icon {\\r\\n  font-size: 20px;\\r\\n  color: #f03d25;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.user-info-container {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.recompose-icon {\\r\\n  font-size: 20px;\\r\\n  color: #0084ff;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.endcall-icon {\\r\\n  font-size: 20px;\\r\\n  color: white;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.media-control-icon {\\r\\n  font-size: 20px;\\r\\n  border-radius: 50%;\\r\\n  cursor: pointer;\\r\\n  color: #999999;\\r\\n}\\r\\n\\r\\n.media-active {\\r\\n\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9jYWxsUm9vbS9jYWxsLXJvb20uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osYUFBYTtBQUNmOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLFNBQVM7RUFDVCx5QkFBeUI7RUFDekIsUUFBUTtFQUNSLGFBQWE7RUFDYixnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLHVCQUF1Qjs7QUFFekI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsWUFBWTtFQUNaLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIscUJBQXFCO0VBQ3JCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsNEJBQTRCO0VBQzVCLHlCQUF5QjtFQUN6QixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsYUFBYTtBQUNmOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWiw2QkFBNkI7RUFDN0IsV0FBVztFQUNYLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1COztBQUVyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBLHFCQUFxQjs7QUFFckI7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYix5QkFBeUI7RUFDekIscUJBQXFCO0VBQ3JCLFVBQVU7RUFDVixTQUFTO0VBQ1QsUUFBUTtFQUNSLFNBQVM7RUFDVCxjQUFjOztBQUVoQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixjQUFjO0VBQ2QsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGNBQWM7RUFDZCxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLFlBQVk7RUFDWixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsY0FBYztBQUNoQjs7QUFFQTs7RUFFRSxZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9tYWluL2NhbGxSb29tL2NhbGwtcm9vbS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1haW4tZGl2IHtcclxuXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIHdpZHRoOiAxMDB2dztcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG59XHJcblxyXG4uY29udGFpbmVyVXNlclZpZGVvIHtcclxuICB3aWR0aDogMzV2dztcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIGxlZnQ6IGNhbGMoNTB2dyAtIDE3LjV2dyk7XHJcbiAgdG9wOiAwcHg7XHJcbiAgei1pbmRleDogLTkwMDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG59XHJcblxyXG4udXNlci1pbWFnZSB7XHJcbiAgaGVpZ2h0OiAxMDBweDtcclxuICB3aWR0aDogMTAwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG59XHJcblxyXG4ubWFpbi1idXR0b25zLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XHJcbiAgaGVpZ2h0OiA2MCU7XHJcbn1cclxuXHJcbi5jYWxsLWVuZGVkLWJ1dHRvbnMtY29udGFpbmVyIHtcclxuICBtYXJnaW4tbGVmdDogNDBweDtcclxuICBtYXJnaW4tcmlnaHQ6IDQwcHg7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4ucmVjb21wb3NlLWJ1dHRvbi1jb250YWluZXIge1xyXG4gIHdpZHRoOiA0NHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICBwYWRkaW5nOiAxMXB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMDg0ZmY7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcblxyXG4uY2xvc2UtYnV0dG9uLWNvbnRhaW5lciB7XHJcbiAgd2lkdGg6IDQ0cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIHBhZGRpbmc6IDExcHggMTRweCAxMXB4IDE0cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2YwM2QyNTtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbi5jYWxsLWVuZGVkLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMjAwcHg7XHJcbn1cclxuXHJcbi5idXR0b24tY29udHJvbC1jb250YWluZXIge1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICBoZWlnaHQ6IDUwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgd2lkdGg6IDUwcHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxufVxyXG5cclxuLmJ1dHRvbnMtYmFyLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4vKiByZ2IoMjgsIDMwLCAzMyk7ICovXHJcblxyXG4udXNlclZpZGVvUGxheWVyIHtcclxuICBtaW4taGVpZ2h0OiAxMDAlO1xyXG4gIG1hcmdpbi1yaWdodDogNXB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDVweDtcclxufVxyXG5cclxuLmNvbnRhaW5lclNlbGZWaWRlbyB7XHJcbiAgd2lkdGg6IDEwMHZ3O1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XHJcbiAgcGFkZGluZzogMDtcclxuICBtYXJnaW46IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG4gIHotaW5kZXg6IC0xMDAwO1xyXG5cclxufVxyXG5cclxuLmNsb3NlLWljb24ge1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxuICBjb2xvcjogI2YwM2QyNTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi51c2VyLWluZm8tY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5yZWNvbXBvc2UtaWNvbiB7XHJcbiAgZm9udC1zaXplOiAyMHB4O1xyXG4gIGNvbG9yOiAjMDA4NGZmO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmVuZGNhbGwtaWNvbiB7XHJcbiAgZm9udC1zaXplOiAyMHB4O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5tZWRpYS1jb250cm9sLWljb24ge1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxuICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGNvbG9yOiAjOTk5OTk5O1xyXG59XHJcblxyXG4ubWVkaWEtYWN0aXZlIHtcclxuXHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Howl } from 'howler';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { CallRoomService } from './call-room.service';\r\n\r\n\r\ndeclare var Peer: any;\r\n\r\n\r\n@Component({\r\n    selector: 'app-mainpage',\r\n    templateUrl: './call-room.component.html',\r\n    styleUrls: ['./call-room.component.css']\r\n})\r\n\r\nexport class CallRoomComponent implements OnInit {\r\n    peer = new Peer(undefined);\r\n    myPeerId;\r\n    roomId: any;\r\n    isVideoCall: any;\r\n    userCallDes: any\r\n    connectedUser: any\r\n    ringinSound: Howl;\r\n    callState: string;\r\n    isCaller: boolean;\r\n    callStatus: boolean;\r\n    isCameraOpen: boolean;\r\n    isOtherUserCameraOpen: boolean;\r\n    isMicroOpen: boolean;\r\n    pauseResumeCameraStream: BehaviorSubject<boolean>;\r\n    pauseResumeMicroStream: BehaviorSubject<boolean>;\r\n    stopCallStream: BehaviorSubject<boolean>;\r\n\r\n    myVideo: any;\r\n    userVideo: any;\r\n    callWindow;\r\n    time: number = 0;\r\n    interval;\r\n    constructor(private callRoomService: CallRoomService, private router: ActivatedRoute) {\r\n        this.stopCallStream = new BehaviorSubject(null);\r\n        this.pauseResumeMicroStream = new BehaviorSubject(null);\r\n        this.pauseResumeCameraStream = new BehaviorSubject(null);\r\n        this.isCameraOpen = false;\r\n        this.isMicroOpen = true;\r\n\r\n        this.callStatus = true;\r\n        this.callState = 'Mise en relation...'\r\n        this.ringinSound = new Howl({\r\n            src: ['/assets/audio/isringing.mp3'],\r\n            loop: true\r\n\r\n        });\r\n\r\n    }\r\n    ngOnInit() {\r\n        this.isVideoCall = this.router.snapshot.queryParamMap.get('video') == 'true';\r\n        this.isCameraOpen = this.isVideoCall;\r\n        this.isOtherUserCameraOpen = false;\r\n        this.roomId = this.router.snapshot.paramMap.get('id');\r\n        this.isCaller = this.router.snapshot.queryParamMap.get('iscaller') == 'true';\r\n\r\n        this.userVideo = document.getElementById('otherUserVideo')\r\n        this.userVideo.addEventListener('loadedmetadata', () => {\r\n            this.userVideo.play()\r\n        })\r\n        this.myVideo = document.getElementById('userVideo')\r\n        this.myVideo.addEventListener('loadedmetadata', () => {\r\n            this.myVideo.play()\r\n        })\r\n\r\n\r\n\r\n        this.peer.on('open', id => {\r\n            this.callRoomService.startCall(this.roomId, id)\r\n        })\r\n        this.callRoomService.userDisconnectFromRoom()\r\n            .subscribe(() => {\r\n                this.stopTimer()\r\n                this.stopCallStream.next(true)\r\n                this.callStatus = false;\r\n                this.callState = 'Call Ended'\r\n                this.isOtherUserCameraOpen = false;\r\n            })\r\n        this.callRoomService.onCallEnded()\r\n            .subscribe(res => {\r\n                // this.ringinSound.stop() \r\n                this.isOtherUserCameraOpen = false;\r\n                if (this.time > 0) {\r\n                    this.stopTimer();\r\n                    this.callStatus = false;\r\n                    this.callState = 'Call Ended...'\r\n                    if (this.isCaller) {\r\n                        this.callRoomService.getConversationByUsers(this.userCallDes._id)\r\n                            .subscribe((response: any) => {\r\n                                this.callRoomService.logCall(response.conversation._id, true, this.isVideoCall)\r\n                                    .subscribe()\r\n\r\n                            })\r\n                    }\r\n                } else {\r\n                    this.callStatus = false;\r\n                    this.callState = 'Call Ended...'\r\n                    if (this.isCaller) {\r\n                        this.callRoomService.getConversationByUsers(this.userCallDes._id)\r\n                            .subscribe((response: any) => {\r\n                                this.callRoomService.logCall(response.conversation._id, false, false)\r\n                                    .subscribe()\r\n\r\n                            })\r\n                    }\r\n                }\r\n                this.stopCallStream.next(true)\r\n\r\n\r\n            })\r\n        const userIds = this.roomId.split('-')\r\n        this.callRoomService.onCallState()\r\n            .subscribe(state => {\r\n\r\n                if (state) {\r\n\r\n                    this.callStatus = true;\r\n                    this.callState = 'its ringing...'\r\n                    //this.ringinSound.play()\r\n\r\n                }\r\n                else {\r\n                    this.callState = 'No answer                    '\r\n                    this.stopCallStream.next(true)\r\n                    this.callStatus = false;\r\n                    if (this.isCaller)\r\n                        this.callRoomService.getConversationByUsers(this.userCallDes._id)\r\n                            .subscribe((response: any) => {\r\n                                this.callRoomService.logCall(response.conversation._id, false, false)\r\n                                    .subscribe()\r\n\r\n                            })\r\n                }\r\n            })\r\n        this.callRoomService.getConnectUser()\r\n            .subscribe((response: any) => {\r\n                console.log(response)\r\n                this.connectedUser = response.user\r\n                this.callRoomService.getUserById(this.connectedUser._id == userIds[1] ? userIds[0] : userIds[1])\r\n                    .subscribe((response: any) => {\r\n                        this.userCallDes = response\r\n                        if (this.isCaller)\r\n                            this.callRoomService.callUser(this.connectedUser._id, this.userCallDes._id, this.isVideoCall)\r\n                        else {\r\n                            this.startTimer()\r\n                            this.isOtherUserCameraOpen = this.isVideoCall\r\n\r\n                        }\r\n                    })\r\n\r\n            })\r\n\r\n        this.callRoomService.onCameraStateChanged()\r\n            .subscribe((action: boolean) => {\r\n                this.isOtherUserCameraOpen = action\r\n                this.isVideoCall = this.isCameraOpen || action\r\n            })\r\n        this.createCall()\r\n\r\n    }\r\n    endCall() {\r\n        if (this.time > 0) {\r\n            this.stopTimer()\r\n        }\r\n        this.callStatus = false;\r\n        this.callState = 'Call Ended'\r\n        this.isOtherUserCameraOpen = false;\r\n        this.callRoomService.endCall(this.userCallDes, false)\r\n        this.callRoomService.endCall(this.userCallDes, true)\r\n        this.stopCallStream.next(true)\r\n        if (this.isCaller) {\r\n            this.callRoomService.getConversationByUsers(this.userCallDes._id)\r\n                .subscribe((response: any) => {\r\n                    this.callRoomService.logCall(response.conversation._id, true, this.isVideoCall)\r\n                        .subscribe()\r\n\r\n                })\r\n        }\r\n\r\n\r\n    }\r\n    onOpenAndCloseCamera(status: boolean) {\r\n        this.isCameraOpen = status\r\n        this.pauseResumeCameraStream.next(this.isCameraOpen)\r\n        this.callRoomService.userOpenCloseCamera(this.userCallDes._id, status)\r\n        this.isVideoCall = this.isOtherUserCameraOpen || status;\r\n    }\r\n    onOpenAndCloseMicro(status: boolean) {\r\n        this.isMicroOpen = status\r\n        this.pauseResumeMicroStream.next(this.isMicroOpen)\r\n    }\r\n    closeCallWindow() {\r\n        this.callRoomService.setOpenCallWindow(true)\r\n    }\r\n    createCall() {\r\n\r\n        this.myVideo.muted = true;\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: false })\r\n            .then(stream => {\r\n                if (!this.isVideoCall) stream.getVideoTracks().forEach(track => track.enabled = false)\r\n\r\n                this.pauseResumeCameraStream\r\n                    .subscribe(action => {\r\n                        if (action !== null) {\r\n\r\n                            stream.getVideoTracks().forEach(track => track.enabled = action)\r\n                        }\r\n                    })\r\n                this.pauseResumeMicroStream\r\n                    .subscribe(action => {\r\n                        if (action !== null) {\r\n                            stream.getAudioTracks().forEach(track => track.enabled = action)\r\n                        }\r\n                    })\r\n                this.stopCallStream\r\n                    .subscribe(res => {\r\n                        if (res) {\r\n                            stream.getTracks().forEach(track => track.stop())\r\n                            this.myVideo.remove()\r\n                            this.userVideo.remove()\r\n\r\n                        }\r\n                    })\r\n\r\n                this.myVideo.srcObject = stream\r\n\r\n                this.peer.on('call', call => {\r\n                    call.answer(stream)\r\n                    call.on('stream', userVideoStream => {\r\n                        this.userVideo.srcObject = userVideoStream\r\n                    })\r\n                })\r\n                this.callRoomService.userJoiningRoom()\r\n                    .subscribe(userId => {\r\n                        this.startTimer();\r\n                        this.connectToNewUser(userId, stream)\r\n                        this.isOtherUserCameraOpen = this.isVideoCall\r\n\r\n                    })\r\n            })\r\n    }\r\n    connectToNewUser(userId, stream) {\r\n        const call = this.peer.call(userId, stream)\r\n        call.on('stream', userVideoStream => {\r\n            this.userVideo.srcObject = userVideoStream\r\n\r\n        })\r\n        call.on('close', () => {\r\n            console.log('call ended')\r\n        })\r\n    }\r\n    startTimer() {\r\n        this.interval = setInterval(() => {\r\n            if (this.time === 0) {\r\n                this.time++;\r\n            } else {\r\n                this.time++;\r\n            }\r\n            this.callState = this.transform(this.time)\r\n        }, 1000);\r\n    }\r\n    transform(value: number) {\r\n        const minutes: number = Math.floor(value / 60);\r\n        const seconds = (value - minutes * 60)\r\n        const minutesStr = minutes < 10 ? '0' + minutes : minutes\r\n        const secondsStr = seconds < 10 ? '0' + seconds : seconds\r\n        return `${minutesStr}:${secondsStr}`\r\n    }\r\n    pauseTimer() {\r\n        clearInterval(this.interval);\r\n    }\r\n    stopTimer() {\r\n        clearInterval(this.interval)\r\n        this.time = 0\r\n    }\r\n}","\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CallRoomComponent } from './call-room.component';\r\nimport { CallRoomService } from './call-room.service';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nconst RoomRoutes: Routes = [\r\n\r\n    {\r\n        path: ':id',\r\n        component: CallRoomComponent\r\n    },\r\n    {\r\n        path: '**',\r\n        redirectTo: '/chat/messenger'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CallRoomComponent\r\n    ],\r\n\r\n    imports: [\r\n\r\n        CommonModule,\r\n        RouterModule.forChild(RoomRoutes),\r\n        FormsModule\r\n    ],\r\n    providers: [CallRoomService],\r\n})\r\nexport class CallRoomModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Socket } from 'ngx-socket-io';\r\n\r\n\r\n@Injectable()\r\nexport class CallRoomService {\r\n\r\n    private closeCallWindow = new BehaviorSubject(null);\r\n    constructor(private http: HttpClient, private socket: Socket) {\r\n\r\n        this.socket.emit('connectuser', localStorage.getItem('token'), true)\r\n\r\n    }\r\n\r\n    startCall(roomId: string, userPeerId: string) {\r\n        this.socket.emit('join-room', roomId, userPeerId)\r\n    }\r\n    userDisconnectFromRoom() {\r\n        let observable = new Observable(\r\n            (observer) => {\r\n                this.socket.on('user-disconnected-from-room', (data) => {\r\n                    console.log(data)\r\n                    observer.next(data);\r\n                });\r\n                return () => this.socket.disconnect();\r\n            }\r\n        );\r\n        return observable;\r\n    }\r\n    getConversationByUsers(userid: string) {\r\n\r\n        return this.http.get('https://vartlaaap.herokuapp.com/conversation/byusers/' + userid)\r\n    }\r\n    logCall(conversationId, isAnsweredCall, isVideoCall) {\r\n        return this.http.post('https://vartlaaap.herokuapp.com/conversation/call/' + conversationId, { isAnsweredCall, isVideoCall })\r\n\r\n    }\r\n    callUser(callerUserId, receiverUserId, isVideoCall) {\r\n        this.socket.emit('call-user', callerUserId, receiverUserId, isVideoCall)\r\n    }\r\n    onCallEnded() {\r\n        let observable = new Observable(\r\n            (observer) => {\r\n                this.socket.on('call-ended', (data) => {\r\n                    console.log('hey call ended')\r\n                    observer.next(data);\r\n                });\r\n                return () => this.socket.disconnect();\r\n            }\r\n        );\r\n        return observable\r\n    }\r\n    onCameraStateChanged() {\r\n        let observable = new Observable(\r\n            (observer) => {\r\n                this.socket.on('onCameraStateChange', (data) => {\r\n                    observer.next(data);\r\n                });\r\n                return () => this.socket.disconnect();\r\n            }\r\n        );\r\n        return observable\r\n    }\r\n\r\n    userOpenCloseCamera(DestUserId, action) {\r\n        this.socket.emit('cameraOpenClose', DestUserId, action)\r\n    }\r\n\r\n    onCallState() {\r\n        let observable = new Observable(\r\n            (observer) => {\r\n                this.socket.on('user-call-state', (data) => {\r\n                    observer.next(data);\r\n                });\r\n                return () => this.socket.disconnect();\r\n            }\r\n        );\r\n        return observable\r\n    }\r\n    getUserById(userId) {\r\n        return this.http.get(`https://vartlaaap.herokuapp.com/user/${userId}`)\r\n    }\r\n    getConnectUser() {\r\n\r\n        return this.http.get('https://vartlaaap.herokuapp.com/user/bytoken')\r\n    }\r\n    endCall(userCaller, fromCaller) {\r\n        this.socket.emit('end-call', userCaller, fromCaller)\r\n    }\r\n    setOpenCallWindow(bool) {\r\n        this.closeCallWindow.next(bool)\r\n    }\r\n    userJoiningRoom() {\r\n        let observable = new Observable(\r\n            (observer) => {\r\n                this.socket.on('userConnectedToRoom', (data) => {\r\n                    console.log(data)\r\n                    observer.next(data);\r\n                });\r\n                return () => this.socket.disconnect();\r\n            }\r\n        );\r\n        return observable;\r\n    }\r\n}"],"sourceRoot":"webpack:///","file":"main-callRoom-call-room-module-es5.js"}